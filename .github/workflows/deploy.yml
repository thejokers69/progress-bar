name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  PATH: /usr/bin:/usr/local/bin:/opt/homebrew/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:$PATH
  SHELL: /bin/bash

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug Environment
        run: |
          echo "Current PATH: $PATH"
          echo "Current SHELL: $SHELL"
          which sh || echo "sh not found in PATH"
          ls -la /bin/sh || echo "/bin/sh not found"
          ls -la /bin/bash || echo "/bin/bash not found"

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: |
          # Create symlink to shell if needed
          if [ ! -f "/bin/sh" ] && [ -f "/bin/bash" ]; then
            sudo ln -sf /bin/bash /bin/sh
          fi
          # Use explicit shell path for npm
          SHELL=/bin/bash npm ci --no-optional

      - name: Build
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: self-hosted
    needs: build
    steps:
      - name: Fix gzip availability
        run: |
          # Show debug info
          echo "Current PATH: $PATH"
          which gzip || echo "gzip not found in PATH"

          # Create symbolic links in common locations if gzip exists but isn't being found
          if [ -f "/usr/bin/gzip" ]; then
            echo "Creating symbolic links to ensure gzip is available"
            mkdir -p ~/.local/bin
            ln -sf /usr/bin/gzip ~/.local/bin/gzip
            echo "Added symbolic link at ~/.local/bin/gzip"
            
            # Add .local/bin to PATH for this session
            export PATH="$HOME/.local/bin:$PATH"
            echo "Updated PATH: $PATH"
            
            # Verify gzip works
            which gzip
            gzip --version
          else
            echo "gzip not found at /usr/bin/gzip, installing with brew"
            brew install gzip
          fi

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        env:
          PATH: /usr/bin:/usr/local/bin:/opt/homebrew/bin:$HOME/.local/bin:$PATH
